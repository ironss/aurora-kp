Munin plugins to retrieve online weather forecasts, etc

* Weather forecasts from OpenWeatherMap
* Weather forecasts from Apple WeatherKit
* Solar Kp index forecast from NOAA


Files
=====

* weather.py        retrieve current weather from a service provider and create
  a standard weather report

* weather_owm.py    settings for OpenWeatherMap
* weather_awk.py    settings for Apple WeatherKit

* weather_          Munin plugin to present weather from multiple providers
* weather_owm_      Munin plugin to retrieve weather from OpenWeatherMap
* weather_awk_      Munin plugin to retrieve weather from Apple WeatherKit

* /etc/munin/plugins/openweathermap
* /etc/munin/plugins/weatherkit
                    Configuration files to specify secrets, etc
                    Note that these are restricted access, so relatively
                    safe from casual snooping


OpenWeatherMap
==============

* Create an account with OpenWeatherMap

* Create an API key

* Modify the configuration file /etc/munin/plugin-conf.d/weather_owm

* Create and/or modify the locations file locations.json

* Symlink the Munin plugin as required for each location


WeatherKit
==========

* See instructions on Apple Developer website to

    * register for Apple WeatherKit

    * generate a private key

* Create a long-lasting JWT

    * TODO: generate JWT from the private key on-the-fly

* Modify the configuration file /etc/munin/plugin-conf.d/weather_owm

* Create and/or modify the locations file locations.json

* Symlink the Munin plugin as required for each location


Change data-storage parameters
==============================

Sometimes it is useful to store data at finer granularity than the normal
Munin settings (something like 5 mins for 3 days, 30 mins for 2 weeks,
2 hours for 1 month, 1 day for 1 year).

Note that this will increase the size of the data stored

    Name   | Details                                       | File size
    -------|-----------------------------------------------|----------
    normal | 5m for 2d, 30m for 9d, 2h for 40d, 1d for 1y  |  50 KB
    huge   | 5m for 1y                                     |   3 MB
           | 5m for 10y                                    |  30 MB
           | 5m for 1y, 1h for 10y                         |   5.5 MB
           | 5m for 100d, 1h for 10y                       |   3.3 MB
           | 5m for 100d, 1h for 1y                        |   1 MB

Suitable settings for various targets might be

    Name               | Description             | File size | Parameters | Total size
    -------------------|-------------------------|-----------|------------|-----------
    server data        | normal                  |  50 KB    |       200  |      1 MB
    weather data       | 5m for 100d, 1h for 10y |   3.3 MB  |        50  |    200 MB
    RIVIR gateway data | 5m for 1y               |   3 MB    |        50  |    150 MB
                       | 5m for 1y, 1h for 10y   |   5.5 MB  |        50  |    275 MB

Munin has a configuration parameter to adjust the data storage size. However, it
is a global parameter, and cannot be set for individual hosts, plugins or
graphs.

Munin will work correctly with any RRD file, including one that has been modified
from the standard.

It is probably best to leave the Munin configuration as standard, then
adjust the RRD files directly for those that need finer granularity.


Process
-------

* Add the new target to Munin, both the node or node-proxy, and the master

* Wait for Munin to create the RRD files for the new target

* Identify the RRD files that need adjusting

    * a simple list
    * parameters for 'find'

* Create or find an RRD template file with the required size parameters

* Run the following shell script to adjust the RRD files

.. code-block:: sh

    filelist=$(find /var/lib/munin/Places -name '*.rrd' -size -100k)
    template=template-weather.rrd

    for f in $filelist; do
        echo "$f"
        sudo -u munin cp "$f" "$f.bak"
        sudo -u munin rrdtool create "$f.tmp" --template "$template" --source "$f"
        sudo -u munin mv "$f.tmp" "$f"
    done

* Verify that the new files are correct

* Remove the backup files

.. code-block:: sh

    for f in $filelist; do
        echo "$f"
        sudo -u munin rm "$f.bak"
    done


TODO
====

* [DONE] Combine all of those nexeo_ plugins into a single multigraph plugin

* [DONE] Move the plugins to constanza

    * astro
    * tides
    * weather

* [DONE] Move the places into group 'Places' rather than their domain suffix.

* [DONE] Change the weather_ plugins to openweathermap_

    * [CANCELLED] and ensure that the data moves too -- only 3 or 4 days, so just abandoned the weather data

* [DONE] Create a new weather_ plugin that borrows data from weatherkit_ and openweathermap_ plugins

    * [DONE] this new plugin will not actually read data ('update no'), but will use 'graph_order'
      to borrow the data

* Increase data-storage parameters for various parameters from the default

    * Weather data
    * RIVIR gateway data

* Think of a better way to store secrets for weatherkit and openweathermap. Currently, stored in
  /etc/munin/plugin-conf.d/weatherkit etc

* Store and share location data between plugins

    * [DONE] Stored in /var/lib/munin/locations.json
    * Think of a better way to store location data

* Generate weatherkit JWT on-the-fly, rather than using the 400-day token that I generated
  manually and stored in /etc/munin/plugin-conf.d/weatherkit.

* [DONE] Add data attribution for weather data

* [PARTIAL] Places of interest

    [X] Christchurch -- weather: airport
    [X] Lyttelton -- weather:port, tides: port
    [X] Nelson -- weather: airport, tide:port
    [ ] Greymouth
    [ ] Auckland

    [X] Wichita, KA, US -- weather

    [X] Scott Base -- weather
    [X] SANAE IV -- weather
    [X] Amundsen-Scott Polar Station -- weather
    [ ] other Antarctic bases
